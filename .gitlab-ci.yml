cancel-prev-pipelines:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  rules:
  - if: $CI_PIPELINE_SOURCE =~ /^schedule.*$/
    when: never
  - if: $CI_COMMIT_TAG
    when: never
  - - if: $CI_COMMIT_BRANCH == "main"
      when: never
    - if: $CI_COMMIT_BRANCH =~ /^[0-9]+\.[0-9]+\.x$/
      when: never
    - - if: $CI_COMMIT_BRANCH =~ /^mq-working-branch-/
        when: never
  - if: $CI_COMMIT_MESSAGE =~ /.*\[skip cancel\].*/
    when: never
  - if: $CI_COMMIT_REF_NAME =~ /.*-skip-cancel$/
    when: never
  - when: on_success
  script:
  - source /root/.bashrc
  - export GITLAB_TOKEN=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $GITLAB_SCHEDULER_TOKEN_SSM_NAME)
  - inv pipeline.auto-cancel-previous-pipelines
  stage: .pre
  tags:
  - arch:amd64
default:
  retry:
    max: 2
    when:
    - runner_system_failure
    - stuck_or_timeout_failure
    - unknown_failure
    - api_failure
    - scheduler_failure
    - stale_schedule
    - data_integrity_failure
github_rate_limit_info:
  allow_failure: true
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  rules:
  - - if: $CI_COMMIT_BRANCH =~ /^mq-working-branch-/
      when: never
  - when: on_success
  script:
  - source /root/.bashrc
  - python3 -m pip install -r tasks/libs/requirements-github.txt datadog_api_client
  - export GITHUB_KEY_B64=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $MACOS_GITHUB_KEY_SSM_NAME)
  - export GITHUB_APP_ID=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $MACOS_GITHUB_APP_ID_SSM_NAME)
  - export GITHUB_INSTALLATION_ID=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh
    $MACOS_GITHUB_INSTALLATION_ID_SSM_NAME)
  - export DD_API_KEY=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $API_KEY_ORG2_SSM_NAME)
  - inv github.send-rate-limit-info-datadog --pipeline-id $CI_PIPELINE_ID --app-instance
    1
  - export GITHUB_KEY_B64=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $MACOS_GITHUB_KEY_2_SSM_NAME)
  - export GITHUB_APP_ID=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $MACOS_GITHUB_APP_ID_2_SSM_NAME)
  - export GITHUB_INSTALLATION_ID=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh
    $MACOS_GITHUB_INSTALLATION_ID_2_SSM_NAME)
  - export DD_API_KEY=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $API_KEY_ORG2_SSM_NAME)
  - inv github.send-rate-limit-info-datadog --pipeline-id $CI_PIPELINE_ID --app-instance
    2
  stage: .pre
  tags:
  - arch:amd64
go_deps:
  artifacts:
    expire_in: 1 day
    paths:
    - $CI_PROJECT_DIR/modcache.tar.xz
  cache:
  - key:
      files:
      - go.mod
      - ./**/go.mod
      prefix: go_deps
    paths:
    - modcache.tar.xz
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - setup_agent_version
  retry: 1
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    variables:
      POLICY: pull-push
  - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    variables:
      POLICY: pull
  script:
  - if [ -f modcache.tar.xz  ]; then exit 0; fi
  - source /root/.bashrc
  - inv -e deps --verbose
  - cd $GOPATH/pkg/mod/ && tar c -I "pxz -T${KUBERNETES_CPU_REQUEST}" -f $CI_PROJECT_DIR/modcache.tar.xz
    .
  stage: deps_fetch
  tags:
  - arch:amd64
  variables:
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_LIMIT: 16Gi
    KUBERNETES_MEMORY_REQUEST: 12Gi
go_tools_deps:
  artifacts:
    expire_in: 1 day
    paths:
    - $CI_PROJECT_DIR/modcache_tools.tar.xz
  cache:
  - key:
      files:
      - ./**/go.mod
      prefix: go_tools_deps
    paths:
    - modcache_tools.tar.xz
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - setup_agent_version
  retry: 1
  rules:
  - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
    variables:
      POLICY: pull-push
  - if: $CI_COMMIT_BRANCH != $CI_DEFAULT_BRANCH
    variables:
      POLICY: pull
  script:
  - if [ -f modcache_tools.tar.xz  ]; then exit 0; fi
  - source /root/.bashrc
  - inv -e download-tools
  - cd $GOPATH/pkg/mod/ && tar c -I "pxz -T${KUBERNETES_CPU_REQUEST}" -f $CI_PROJECT_DIR/modcache_tools.tar.xz
    .
  stage: deps_fetch
  tags:
  - arch:amd64
  variables:
    KUBERNETES_CPU_REQUEST: 16
setup_agent_version:
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_x64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  needs: []
  script:
  - source /root/.bashrc
  - inv -e agent.version --cache-version
  - $S3_CP_CMD $CI_PROJECT_DIR/agent-version.cache $S3_ARTIFACTS_URI/agent-version.cache
  stage: setup
  tags:
  - arch:amd64
stages:
- .pre
- setup
- maintenance_jobs
- deps_build
- deps_fetch
- source_test
- source_test_stats
- software_composition_analysis
- binary_build
- package_deps_build
- kernel_matrix_testing_prepare
- kernel_matrix_testing_system_probe
- kernel_matrix_testing_security_agent
- kernel_matrix_testing_cleanup
- integration_test
- benchmarks
- package_build
- packaging
- pkg_metrics
- kitchen_deploy
- kitchen_testing
- container_build
- container_scan
- check_deploy
- dev_container_deploy
- deploy_containers
- deploy_packages
- deploy_cws_instrumentation
- deploy_dca
- trigger_release
- choco_build
- choco_deploy
- internal_image_deploy
- install_script_testing
- e2e_pre_test
- e2e
- kitchen_cleanup
- functional_test
- functional_test_cleanup
- junit_upload
- internal_kubernetes_deploy
- post_rc_build
- check_merge
- notify
- .post
tests_deb-arm64-py3:
  artifacts:
    expire_in: 2 weeks
    paths:
    - $TEST_OUTPUT_FILE
    - junit-*.tgz
    reports:
      annotations:
      - $EXTERNAL_LINKS_PATH
      junit:
      - '**/junit-out-*.xml'
    when: always
  before_script:
  - source /root/.bashrc && conda activate $CONDA_ENV
  - - mkdir -p $GOPATH/pkg/mod && tar xJf modcache.tar.xz -C $GOPATH/pkg/mod
    - rm -f modcache.tar.xz
  - inv -e rtloader.make --install-prefix=$CI_PROJECT_DIR/dev --python-runtimes "$PYTHON_RUNTIMES"
  - inv -e rtloader.install
  - inv -e rtloader.format --raise-if-changed
  - inv -e rtloader.test
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/deb_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - go_deps
  - go_tools_deps
  rules:
  - - if: $RUN_UNIT_TESTS == "off"
      when: never
  - - if: $CI_COMMIT_BRANCH == "main"
      variables:
        COVERAGE_CACHE_FLAG: --push-coverage-cache
        FAST_TESTS: 'false'
    - if: $CI_COMMIT_BRANCH =~ /^[0-9]+\.[0-9]+\.x$/
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - if: $CI_COMMIT_TAG != null
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - if: $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "pipeline"
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - if: $RUN_UNIT_TESTS == "on"
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - variables:
        COVERAGE_CACHE_FLAG: --pull-coverage-cache
        FAST_TESTS: 'true'
  script:
  - - mkdir -p $GOPATH/pkg/mod && tar xJf modcache_tools.tar.xz -C $GOPATH/pkg/mod
    - rm -f modcache_tools.tar.xz
  - inv -e install-tools
  - inv -e gitlab.generate-ci-visibility-links --output=$EXTERNAL_LINKS_PATH
  - FAST_TESTS_FLAG=""
  - if [[ "$FAST_TESTS" == "true" ]]; then FAST_TESTS_FLAG="--only-impacted-packages";
    fi
  - inv -e sds.build-library
  - inv -e agent.build
  - inv -e test $FLAVORS --include-sds --race --profile --rerun-fails=2 --python-runtimes
    "$PYTHON_RUNTIMES" --coverage --cpus $KUBERNETES_CPU_REQUEST $EXTRA_OPTS --save-result-json
    $TEST_OUTPUT_FILE --junit-tar "junit-${CI_JOB_NAME}.tgz" --build-stdlib $FAST_TESTS_FLAG
    --test-washer
  - export CODECOV_TOKEN=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $CODECOV_TOKEN_SSM_NAME)
  - inv -e coverage.upload-to-codecov $COVERAGE_CACHE_FLAG || true
  stage: source_test
  tags:
  - arch:arm64
  variables:
    CONDA_ENV: ddpy3
    EXTERNAL_LINKS_PATH: external_links_$CI_JOB_ID.json
    FLAVORS: --flavor base
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_LIMIT: 16Gi
    KUBERNETES_MEMORY_REQUEST: 16Gi
    PYTHON_RUNTIMES: '3'
    TEST_OUTPUT_FILE: test_output.json
tests_rpm-arm64-py3:
  artifacts:
    expire_in: 2 weeks
    paths:
    - $TEST_OUTPUT_FILE
    - junit-*.tgz
    reports:
      annotations:
      - $EXTERNAL_LINKS_PATH
      junit:
      - '**/junit-out-*.xml'
    when: always
  before_script:
  - source /root/.bashrc && conda activate $CONDA_ENV
  - - mkdir -p $GOPATH/pkg/mod && tar xJf modcache.tar.xz -C $GOPATH/pkg/mod
    - rm -f modcache.tar.xz
  - inv -e rtloader.make --install-prefix=$CI_PROJECT_DIR/dev --python-runtimes "$PYTHON_RUNTIMES"
  - inv -e rtloader.install
  - inv -e rtloader.format --raise-if-changed
  - inv -e rtloader.test
  image: 486234852809.dkr.ecr.us-east-1.amazonaws.com/ci/datadog-agent-buildimages/rpm_arm64$DATADOG_AGENT_BUILDIMAGES_SUFFIX:$DATADOG_AGENT_BUILDIMAGES
  needs:
  - go_deps
  - go_tools_deps
  rules:
  - - if: $RUN_UNIT_TESTS == "off"
      when: never
  - - if: $CI_COMMIT_BRANCH == "main"
      variables:
        COVERAGE_CACHE_FLAG: --push-coverage-cache
        FAST_TESTS: 'false'
    - if: $CI_COMMIT_BRANCH =~ /^[0-9]+\.[0-9]+\.x$/
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - if: $CI_COMMIT_TAG != null
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - if: $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "pipeline"
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - if: $RUN_UNIT_TESTS == "on"
      variables:
        COVERAGE_CACHE_FLAG: ''
        FAST_TESTS: 'false'
    - variables:
        COVERAGE_CACHE_FLAG: --pull-coverage-cache
        FAST_TESTS: 'true'
  script:
  - - mkdir -p $GOPATH/pkg/mod && tar xJf modcache_tools.tar.xz -C $GOPATH/pkg/mod
    - rm -f modcache_tools.tar.xz
  - inv -e install-tools
  - inv -e gitlab.generate-ci-visibility-links --output=$EXTERNAL_LINKS_PATH
  - FAST_TESTS_FLAG=""
  - if [[ "$FAST_TESTS" == "true" ]]; then FAST_TESTS_FLAG="--only-impacted-packages";
    fi
  - inv -e sds.build-library
  - inv -e agent.build
  - inv -e test $FLAVORS --include-sds --race --profile --rerun-fails=2 --python-runtimes
    "$PYTHON_RUNTIMES" --coverage --cpus $KUBERNETES_CPU_REQUEST $EXTRA_OPTS --save-result-json
    $TEST_OUTPUT_FILE --junit-tar "junit-${CI_JOB_NAME}.tgz" --build-stdlib $FAST_TESTS_FLAG
    --test-washer
  - export CODECOV_TOKEN=$($CI_PROJECT_DIR/tools/ci/aws_ssm_get_wrapper.sh $CODECOV_TOKEN_SSM_NAME)
  - inv -e coverage.upload-to-codecov $COVERAGE_CACHE_FLAG || true
  stage: source_test
  tags:
  - arch:arm64
  variables:
    CONDA_ENV: ddpy3
    EXTERNAL_LINKS_PATH: external_links_$CI_JOB_ID.json
    FLAVORS: --flavor base
    KUBERNETES_CPU_REQUEST: 16
    KUBERNETES_MEMORY_LIMIT: 16Gi
    KUBERNETES_MEMORY_REQUEST: 16Gi
    PYTHON_RUNTIMES: '3'
    TEST_OUTPUT_FILE: test_output.json
variables:
  AGENT_BINARIES_DIR: bin/agent
  AGENT_QA_PROFILE_SSM_NAME: ci.datadog-agent.agent-qa-profile
  API_KEY_DDDEV_SSM_NAME: ci.datadog-agent.datadog_api_key
  API_KEY_ORG2_SSM_NAME: ci.datadog-agent.datadog_api_key_org2
  APP_KEY_ORG2_SSM_NAME: ci.datadog-agent.datadog_app_key_org2
  ARTIFACTORY_BYPASS_SSM_NAME: ci.datadog-agent.artifactory_bypass
  ARTIFACTORY_GEMS_PATH: artifactory/api/gems/agent-gems
  ARTIFACTORY_PYPI_PATH: artifactory/api/pypi/agent-pypi/simple
  ARTIFACTORY_TOKEN_SSM_NAME: ci.datadog-agent.artifactory_token
  ARTIFACTORY_URL: datadog.jfrog.io
  ARTIFACTORY_USERNAME: datadog-agent
  ARTIFACT_DOWNLOAD_ATTEMPTS: 2
  BTFHUB_ARCHIVE_BRANCH: main
  BUCKET_BRANCH: dev
  CHANGELOG_COMMIT_SHA_SSM_NAME: ci.datadog-agent.gitlab_changelog_commit_sha
  CHOCOLATEY_API_KEY_SSM_NAME: ci.datadog-agent.chocolatey_api_key
  CLANG_LLVM_VER: 12.0.1
  CLUSTER_AGENT_BINARIES_DIR: bin/datadog-cluster-agent
  CLUSTER_AGENT_CLOUDFOUNDRY_BINARIES_DIR: bin/datadog-cluster-agent-cloudfoundry
  CODECOV_TOKEN_SSM_NAME: ci.datadog-agent.codecov_token
  CWS_INSTRUMENTATION_BINARIES_DIR: bin/cws-instrumentation
  DATADOG_AGENT_ARMBUILDIMAGES: v37150619-8250a4fc
  DATADOG_AGENT_ARMBUILDIMAGES_SUFFIX: ''
  DATADOG_AGENT_BTF_GEN_BUILDIMAGES: v37150619-8250a4fc
  DATADOG_AGENT_BTF_GEN_BUILDIMAGES_SUFFIX: ''
  DATADOG_AGENT_BUILDIMAGES: v37150619-8250a4fc
  DATADOG_AGENT_BUILDIMAGES_SUFFIX: ''
  DATADOG_AGENT_EMBEDDED_PATH: /opt/datadog-agent/embedded
  DATADOG_AGENT_SYSPROBE_BUILDIMAGES: v37150619-8250a4fc
  DATADOG_AGENT_SYSPROBE_BUILDIMAGES_SUFFIX: ''
  DATADOG_AGENT_WINBUILDIMAGES: v37150619-8250a4fc
  DATADOG_AGENT_WINBUILDIMAGES_SUFFIX: ''
  DD_AGENT_TESTING_DIR: $CI_PROJECT_DIR/test/kitchen
  DD_PKG_VERSION: latest
  DEB_GPG_KEY_ID: c0962c7d
  DEB_GPG_KEY_NAME: Datadog, Inc. APT key
  DEB_GPG_KEY_SSM_NAME: ci.datadog-agent.deb_signing_private_key_${DEB_GPG_KEY_ID}
  DEB_RPM_TESTING_BUCKET_BRANCH: testing
  DEB_S3_BUCKET: apt.datad0g.com
  DEB_SIGNING_PASSPHRASE_SSM_NAME: ci.datadog-agent.deb_signing_key_passphrase_${DEB_GPG_KEY_ID}
  DEB_TESTING_S3_BUCKET: apttesting.datad0g.com
  DOCKER_REGISTRY_LOGIN_SSM_KEY: ci.datadog-agent.docker_hub_login
  DOCKER_REGISTRY_PWD_SSM_KEY: ci.datadog-agent.docker_hub_pwd
  DOCKER_REGISTRY_URL: docker.io
  DOGSTATSD_BINARIES_DIR: bin/dogstatsd
  E2E_TESTS_API_KEY_SSM_NAME: ci.datadog-agent.e2e_tests_api_key
  E2E_TESTS_APP_KEY_SSM_NAME: ci.datadog-agent.e2e_tests_app_key
  E2E_TESTS_RC_KEY_SSM_NAME: ci.datadog-agent.e2e_tests_rc_key
  EXECUTOR_JOB_SECTION_ATTEMPTS: 2
  FF_SCRIPT_SECTIONS: 1
  GENERAL_ARTIFACTS_CACHE_BUCKET_URL: https://dd-agent-omnibus.s3.amazonaws.com
  GET_SOURCES_ATTEMPTS: 2
  GITLAB_FULL_API_TOKEN_SSM_NAME: ci.datadog-agent.gitlab_full_api_token
  GITLAB_READ_API_TOKEN_SSM_NAME: ci.datadog-agent.gitlab_read_api_token
  GITLAB_SCHEDULER_TOKEN_SSM_NAME: ci.datadog-agent.gitlab_pipelines_scheduler_token
  GO_TEST_SKIP_FLAKE: 'true'
  INSTALL_SCRIPT_API_KEY_SSM_NAME: ci.agent-linux-install-script.datadog_api_key
  INTEGRATION_WHEELS_CACHE_BUCKET: dd-agent-omnibus
  JIRA_READ_API_TOKEN_SSM_NAME: ci.datadog-agent.jira_read_api_token
  KERNEL_MATRIX_TESTING_ARM_AMI_ID: ami-021f04c00ecfa8590
  KERNEL_MATRIX_TESTING_X86_AMI_ID: ami-0c54d42f8f4180b0c
  KITCHEN_AZURE_CLIENT_ID_SSM_NAME: ci.datadog-agent.azure_kitchen_client_id
  KITCHEN_AZURE_CLIENT_SECRET_SSM_NAME: ci.datadog-agent.azure_kitchen_client_secret
  KITCHEN_AZURE_SUBSCRIPTION_ID_SSM_NAME: ci.datadog-agent.azure_kitchen_subscription_id
  KITCHEN_AZURE_TENANT_ID_SSM_NAME: ci.datadog-agent.azure_kitchen_tenant_id
  KITCHEN_EC2_SSH_KEY_SSM_NAME: ci.datadog-agent.aws_ec2_kitchen_ssh_key
  KITCHEN_INFRASTRUCTURE_FLAKES_RETRY: 2
  MACOS_GITHUB_APP_ID_2_SSM_NAME: ci.datadog-agent.macos_github_app_id_2
  MACOS_GITHUB_APP_ID_SSM_NAME: ci.datadog-agent.macos_github_app_id
  MACOS_GITHUB_INSTALLATION_ID_2_SSM_NAME: ci.datadog-agent.macos_github_installation_id_2
  MACOS_GITHUB_INSTALLATION_ID_SSM_NAME: ci.datadog-agent.macos_github_installation_id
  MACOS_GITHUB_KEY_2_SSM_NAME: ci.datadog-agent.macos_github_key_b64_2
  MACOS_GITHUB_KEY_SSM_NAME: ci.datadog-agent.macos_github_key_b64
  MACOS_S3_BUCKET: dd-agent-macostesting
  OMNIBUS_BASE_DIR: /omnibus
  OMNIBUS_GIT_CACHE_DIR: /tmp/omnibus-git-cache
  OMNIBUS_PACKAGE_DIR: $CI_PROJECT_DIR/omnibus/pkg/
  OMNIBUS_PACKAGE_DIR_SUSE: $CI_PROJECT_DIR/omnibus/suse/pkg
  PROCESS_S3_BUCKET: datad0g-process-agent
  RELEASE_VERSION_6: nightly
  RELEASE_VERSION_7: nightly-a7
  RESTORE_CACHE_ATTEMPTS: 2
  RPM_GPG_KEY_ID: b01082d3
  RPM_GPG_KEY_NAME: Datadog, Inc. RPM key
  RPM_GPG_KEY_SSM_NAME: ci.datadog-agent.rpm_signing_private_key_${RPM_GPG_KEY_ID}
  RPM_S3_BUCKET: yum.datad0g.com
  RPM_SIGNING_PASSPHRASE_SSM_NAME: ci.datadog-agent.rpm_signing_key_passphrase_${RPM_GPG_KEY_ID}
  RPM_TESTING_S3_BUCKET: yumtesting.datad0g.com
  RUN_E2E_TESTS: auto
  RUN_KMT_TESTS: auto
  RUN_UNIT_TESTS: auto
  S3_ARTIFACTS_URI: s3://dd-ci-artefacts-build-stable/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  S3_CP_CMD: aws s3 cp $S3_CP_OPTIONS
  S3_CP_OPTIONS: --no-progress --region us-east-1 --sse AES256
  S3_DD_AGENT_OMNIBUS_BTFS_URI: s3://dd-agent-omnibus/btfs
  S3_DD_AGENT_OMNIBUS_LLVM_URI: s3://dd-agent-omnibus/llvm
  S3_DSD6_URI: s3://dsd6-staging
  S3_OMNIBUS_CACHE_BUCKET: dd-ci-datadog-agent-omnibus-cache-build-stable
  S3_PERMANENT_ARTIFACTS_URI: s3://dd-ci-persistent-artefacts-build-stable/$CI_PROJECT_NAME
  S3_PROJECT_ARTIFACTS_URI: s3://dd-ci-artefacts-build-stable/$CI_PROJECT_NAME
  S3_RELEASE_ARTIFACTS_URI: s3://dd-release-artifacts/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  S3_RELEASE_INSTALLER_ARTIFACTS_URI: s3://dd-release-artifacts/datadog-installer/$CI_PIPELINE_ID
  S3_SBOM_STORAGE_URI: s3://sbom-root-us1-ddbuild-io/$CI_PROJECT_NAME/$CI_PIPELINE_ID
  SLACK_AGENT_CI_TOKEN_SSM_NAME: ci.datadog-agent.slack_agent_ci_token
  SMP_ACCOUNT_ID_SSM_NAME: ci.datadog-agent.single-machine-performance-account-id
  SMP_AGENT_TEAM_ID_SSM_NAME: ci.datadog-agent.single-machine-performance-agent-team-id
  SMP_API_SSM_NAME: ci.datadog-agent.single-machine-performance-api
  SMP_BOT_ACCESS_KEY_ID_SSM_NAME: ci.datadog-agent.single-machine-performance-bot-access-key-id
  SMP_BOT_ACCESS_KEY_SSM_NAME: ci.datadog-agent.single-machine-performance-bot-access-key
  SSH_KEY_RSA_SSM_NAME: ci.datadog-agent.ssh_key_rsa
  SSH_KEY_SSM_NAME: ci.datadog-agent.ssh_key
  SSH_PUBLIC_KEY_RSA_SSM_NAME: ci.datadog-agent.ssh_public_key_rsa
  STATIC_BINARIES_DIR: bin/static
  SYSTEM_PROBE_BINARIES_DIR: bin/system-probe
  USE_S3_CACHING: --omnibus-s3-cache
  VCPKG_BLOB_SAS_URL_SSM_NAME: ci.datadog-agent-buildimages.vcpkg_blob_sas_url
  WINDOWS_BUILDS_S3_BUCKET: $WIN_S3_BUCKET/builds
  WINDOWS_TESTING_S3_BUCKET_A6: pipelines/A6/$CI_PIPELINE_ID
  WINDOWS_TESTING_S3_BUCKET_A7: pipelines/A7/$CI_PIPELINE_ID
  WINGET_PAT_SSM_NAME: ci.datadog-agent.winget_pat
  WIN_S3_BUCKET: dd-agent-mstesting
workflow:
  rules:
  - if: $CI_PIPELINE_SOURCE == "trigger" || $CI_PIPELINE_SOURCE == "pipeline"
    variables:
      USE_CACHING_PROXY_PYTHON: 'false'
      USE_CACHING_PROXY_RUBY: 'false'
  - if: $CI_COMMIT_BRANCH == "main"
    variables:
      GO_TEST_SKIP_FLAKE: 'false'
      USE_CACHING_PROXY_PYTHON: 'true'
      USE_CACHING_PROXY_RUBY: 'true'
  - if: $CI_COMMIT_BRANCH =~ /^[0-9]+\.[0-9]+\.x$/
    variables:
      USE_CACHING_PROXY_PYTHON: 'true'
      USE_CACHING_PROXY_RUBY: 'true'
  - if: $DEPLOY_AGENT == "true" || $DDR_WORKFLOW_ID != null
    variables:
      USE_CACHING_PROXY_PYTHON: 'true'
      USE_CACHING_PROXY_RUBY: 'true'
  - if: $CI_COMMIT_TAG == null
    variables:
      USE_CACHING_PROXY_PYTHON: 'false'
      USE_CACHING_PROXY_RUBY: 'false'
